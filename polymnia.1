.TH polymnia· 1 2019-jan "linux" "command-line initiation, use, and options"
.na

.SH NAME
polymnia \- ansi-c code analysis, research, and navigation

.SH PATRON
.B polymnia-hymnos
(many praises) muse of divine hymns, dancing, geometry

.SH IMAGERY
tall, beautiful woman wearing a viel and looking toward heaven

.SH SUMMARY
polymnia is a custom code analysis tool offering -- tag navigation for
vim-ide, detailed function complexity analysis, and code-base wide reporting
and research -- for the one-true language (c).

.SH DOCUMENTATION FILES
.nf
.B polymnia (1)·······command-line initiation, use, and options
polymnia (4)       shared devices, files, and configuration
polymnia (7)       decision rationale, objectives, and overview

.SH TABLE OF CONTENTS
.nf  
a) synopsis        command overview
a) system-wide     standard command line overview
b) project data    effecting a single project
b) database        alternate database usage
c) world file      alternate world file usage
c) tagging         ide navigation and support
d) reporting       content query and output
e) filtering       cutting reporting volume

.SH A) SYNOPSIS
.B polymnia [OPTIONS]
.nf
  which is the primary production version

.B polymnia_debug [URGENTS] [OPTIONS]
.nf
  which can perform all actions, but with debugging and tracing
  (see yURG for documentation on debugging options)

.SH B) SYSTEM-WIDE OPTIONS
these options help automate polymnia and turn it into a system-wide code
analysis and research platform.  these commands interact with the central
.B world.txt
file.  see polymnia (4) for more information.

.SS --register
adds the current project directory to the world list.  always do this from the
programs home directory, not a sub-directory.  no duplicates will be added,
so do not worry.

.SS --unregister
removes the current project directory from the world list.  existing information
will not be removed, but it will no longer be automatically updated.

.SS --system
updates all projects listed in the world list.  this is quite quick and is
designed to be run in batch.  but, it prints a single line for each update
in case it is used interactively.

.SH C) PROJECT DATA OPTIONS
the central database can also perform a few operations on individual projects
in order to keep the database clean.

.SS --update
appends the database with new data from current code project.  if the project
already exists, it is updated.  if not, it is added.  the project does not need
to be removed first.

.SS --remove
remove current project data from database.  the only reason to remove data is
if a project is no longer in use.  if the project remains registered, it will
be re-added when --system is used.

.SH D) DATABASE OPTIONS
to aide analysis, limited databases or full database copies can be useful.
polymnia does not care.

.SS --database <name>
orders polymnia to use an alternate database as is source and destination.
whatever the name, it will be the same binary format.  every time an alternate
database is used, this option is required.

.SS --new
create/overwrite database using current code project as the only entry.  this
option ensures the database starts fresh.

.SS --update, --system, --remove
these all work exactly like the central database versions above.

.SH E) WORLD FILE OPTIONS
exactly like with alternate databases, alternative world files enable more
varied analysis.

.SS --world <name>
orders polymnia to use an alternate world file.  every time an alternate
world file is used, this option is required.

.SS --register, --unregister, --system
these all work exactly like the central database versions above.

.SH C) TAGGING OPTIONS
polymnia analyzes current code project, including files, headers, and fuctions,
to provide a custom tagging and navigation file for my vim-ide without any
impact to the shared database.

.SS --htags
write detailed tags format to stdout for use by vim-ide.  this report is
specifically designed to support my vim-macros and be loaded into a navigation
window next to the code.

.SH D) REPORTING OPTIONS
polymnia supports several overviews of database content that provide all
information stored, typically for use in a spreadsheet.

.B --projects
.RS 8
write detailed info for each project in database
.RE

.B --files
.RS 8
write detailed info for each project and file in database
.RE

.B --dump
.RS 8
write detailed function info for every project in database
.RE

.B --treeview
.RS 8
write heirarchical, intented view for visualization programs
.RE

.B --titles
.RS 8
adds headers, footers, and spacers to reports
.RE

.SH E) FILTERING OPTIONS
polymnia supports a series of filters to help reduce the volume and
target specific settings in certain statistics.

.B --project <name>
.RS 8
limit output to only a specific project
.RE

.B --debug
.RS 8
show suspected issues identified in debugging
.RE

.B --linux
.RS 8
show all tags with process, system, or filesystem use
.RE

.B --data
.RS 8
show all tags with file reading or writing
.RE

.SH FILES
polymnia stores files in two places -- local files in the code directories and
a common directory in /var/lib.

.B polymnia.db
is the shared database with all code analysis stored in /var/lib/polymnia/.

.B external.txt
is a list of categorized external functions stored in /var/lib/polymnia/.

.B polymnia.mystry
local file with list of all unknown external calls including file, line,
and source function.

.SH HERITAGE
polymnia-hymnos (many praises) is the muse of divine hymns, the lyre, dancing,
geometry, and grammar.  the muses (mousai) are nine daughters of zeus and
mnemosyne (titan of memory) and are the goddesses of art, literature, and
science who inspire creation and enthusiasm.  polymnia is usually depicted
wearing a veil and looking up to the heavens.

.SH AUTHOR
jelloshrike at gmail dot com

.SH COLOPHON
this page is part of a documentation package meant to make use of the
heatherly tools easier and faster.
